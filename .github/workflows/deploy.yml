name: Docker Image CI

on:
  push:
    branches: [ trunk, develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    environment: picota-dev
    env: 
      name: dev
      aws_key_id: ${{ secrets.AWS_KEY_ID }}
      aws_access_key: ${{ secrets.AWS_KEY_SECRET }}
      aws_region: ${{ secrets.AWS_REGION }}

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.aws_key_id }}
        aws-secret-access-key: ${{ env.aws_access_key }}
        aws-region: ${{ env.aws_region }}

    - name: Login to Public ECR
      id: login-pubic-ecr
      uses: docker/login-action@v1
      with:
        registry: public.ecr.aws
      env:
        AWS_REGION: ${{ env.aws_region }}

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: public.ecr.aws
        ECR_REPOSITORY: picota-ecr-${{ env.name }}
        IMAGE_TAG: picota-backend
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG